backend = "glx"
vsync = true

no-frame-pacing = true

# GLX backend: Avoid using stencil buffer, useful if you donâ€™t have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never practically happened)
# and may notwork with --blur-background. My tests show a 15% performance boost. Recommended.
glx-no-stencil = true

# GLX backend: Avoid rebinding pixmap on window damage. Probably could improve performance 
# on rapid window content changes, but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
glx-no-rebind-pixmap = true

# Disable the use of damage information. This cause the whole screen to be redrawn every time,
# instead of the part of the screen has actually changed. Potentially degrades the
# performance, but might fix some artifacts.
# no-use-damage = true

# Corners
# corner-radius = 7
corner-radius = 11

# Shadow
shadow = true
shadow-radius   =  16
shadow-offset-x = -16
shadow-offset-y = -16
shadow-opacity = 0.70

# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
# mark-wmwin-focused = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
# detect-client-leader = true

# Logs
# log-level = "ERROR"
# log-file = "$HOME/.cache/picom.log"

# blur:
# {
#     method = "dual_kawase";
#     strength = 6;
# }

rules = (
    {
        match = "ANIMATED@ != false || window_type != 'dnd";
        animations = (
            {
                triggers = ["geometry"];
                preset = "geometry-change";
                duration = 0.17;
            }
        )
    },
    {
        match = "class_g = 'firefox' && window_type = 'popup_menu' || window_type = 'utility'";
        shadow = false;
        blur-background = false;
    },
    {
        match = "window_type = 'menu' || window_type = 'dnd'";
        shadow = false;
        blur-background = false;
    },
    {
        match = "class_g = 'slop'"; # Maim
        blur-background = false;
    },
    {
        match = "class_g = 'touchegg'";
        blur-background = false;
    },
    {
        match = "window_type = '_KDE_NET_WM_WINDOW_TYPE_OVERRIDE'"; # Telegram
        shadow = false;
        blur-background = false;
    },
    {
        match = "_NET_WM_STATE@ = '_NET_WM_STATE_MAXIMIZED_VERT'";
        corner-radius = 0;
        shadow = false;
    },
    {
        match = "window_type = 'splash' || class_g = 'Rofi'";
        animations = (
            {
                triggers = ["open", "show"];
                preset = "appear";
                duration = 0.06;
                scale = 0.3;
            },
            {
                triggers = ["close", "hide"];
                preset = "disappear";
                duration = 0.06;
                scale = 0.3;
            }
        );
    },
    {
        match = "window_type = 'dock'";
        corner-radius = 0;
        clip-shadow-above = true;
    },
    {
        match = "class_g = 'awesome' && window_type = 'toolbar'";
        corner-radius = 0;
        animations = (
            {
                triggers = ["open", "show"];
                preset = "slide-in";
                direction = "right";
            },
            {
                triggers = ["close", "hide"];
                preset = "slide-out";
                direction = "right";
            }
        );
    },
    {
        match = "window_type = 'notification'";
        animations = (
            {
                triggers = ["open", "show"];
                anim-duration = 0.16;
                offset-x = {
                    curve = "linear";
                    start = 400;
                    end = 0;
                    duration = "anim-duration";
                };
                opacity = {
                    end = 1;
                    start = 1;
                    duration = "anim-duration";
                };
                shadow-offset-x = "offset-x";
                shadow-opacity = "opacity";
            },
            {
                triggers = ["close", "hide"];
                anim-duration = 0.16;
                offset-x = {
                    curve = "linear";
                    start = 0;
                    end = 400;
                    duration = "anim-duration";
                };
                shadow-offset-x = "offset-x";
                opacity = {
                    end = 1;
                    start = 1;
                    duration = "anim-duration";
                };
                shadow-opacity = "opacity";
            }
        );
    },
    {
        match = "class_g *= 'i3lock'";
        shadow = false;
        corner-radius = 0;
        animations = (
            {
                triggers = ["open", "show"];
                opacity = {
                    curve = "linear";
                    duration = 0.17;
                    start = "window-raw-opacity-before";
                    end = "window-raw-opacity";
                };
                blur-opacity = {
                    curve = "linear";
                    duration = 0.17;
                    delay = 0.17;
                    start = "window-raw-opacity-before";
                    end = "window-raw-opacity";
                };
                shadow-opacity = "opacity";
            },
            {
                triggers = ["close", "hide"];
                opacity = {
                    curve = "linear";
                    duration = 0.17
                    start = "window-raw-opacity-before";
                    end = "0";
                };
                blur-opacity = 0;
                shadow-opacity = "opacity";
            }
        );
    }
);

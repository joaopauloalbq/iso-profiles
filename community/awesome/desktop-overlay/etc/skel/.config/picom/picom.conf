backend = "glx";
vsync = true;

# GLX backend: Avoid using stencil buffer, useful if you don’t have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never practically happened)
# and may notwork with --blur-background. My tests show a 15% performance boost. Recommended.
glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage. Probably could improve performance 
# on rapid window content changes, but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
glx-no-rebind-pixmap = true;

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, 
# instead of the part of the screen has actually changed.
# Potentially degrades the performance, but might fix some artifacts.
use-damage = false;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance. 
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already, 
# unless you wish to specify a lower refresh rate than the actual value.
# sw-opti = true;

# These might or might NOT help with performance
# glx-copy-from-front = false; # When enbled on intel GPU: screen broken until compton is killed.
# glx-use-copysubbuffermesa = true
# glx-no-rebind-pixmap = false
# glx-swap-method = 1

# Corners
# corner-radius = 5
corner-radius = 12
rounded-corners-exclude = [
  	"_NET_WM_STATE@:a *= '_NET_WM_STATE_MAXIMIZED_VERT'",
	"_NET_WM_NAME@:s *?= 'rofi - '",
    "window_type = 'tooltip'",
    "window_type = 'dock'",
    "window_type = 'dnd'",
    # "role = 'xfce4-terminal-dropdown'",
  	"class_g = 'MEGAsync'"
];

# Shadow
shadow = true;
shadow-radius = 18;
shadow-offset-x = -18;
shadow-offset-y = -18;
shadow-opacity = 0.65;
shadow-exclude = [
  	"_NET_WM_WINDOW_TYPE:a *= '_KDE_NET_WM_WINDOW_TYPE_OVERRIDE'", # telegram
  	"_NET_WM_STATE@:a *= '_NET_WM_STATE_MAXIMIZED_VERT'",
  	"_NET_WM_STATE@:a *= '_NET_WM_STATE_FULLSCREEN'",
    "window_type = 'dnd'",
  	"class_g = 'MEGAsync'"
];
    
clip-shadow-above = [
    "window_type = 'dock'"
]

detect-rounded-corners = true;

# Fading
fading = false;
# no-fading-openclose = true;
# fade-in-step = 0.03;
# fade-out-step = 0.03;
fade-exclude = [ 
]

focus-exclude = [
	# "class_g = 'slop'", # Maim
	"class_g = 'Rofi'"
];

# Blur
# blur-background = true;
# blur-method = "dual_kawase";
# blur-strength = 7;
# blur-background-exclude = [
  	# "_NET_WM_WINDOW_TYPE:a *= '_KDE_NET_WM_WINDOW_TYPE_OVERRIDE'", # telegram
	# "class_g = 'slop'", # Maim
	# "class_g = 'touchegg'"
# ];

# Logs
# log-level = "ERROR";
# log-file = "$HOME/.cache/picom.log";

# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
# detect-client-leader = true

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.2;
